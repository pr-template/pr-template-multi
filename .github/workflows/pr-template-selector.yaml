# name: PR Template Selector

# on:
#   pull_request:
#     types: [opened, edited, synchronize]

# jobs:
#   select-template:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2    
#       - name: Debugging
#         run: |
#           echo "Base branch: ${{ github.event.pull_request.base.ref }}"
#       - name: Set PR Template
#         run: |
#           BASE_BRANCH=${{ github.event.pull_request.base.ref }}
#           if [ "$BASE_BRANCH" == "development" ]; then
#             echo "Using development PR template"
#             # gh pr edit ${{ github.event.pull_request.number }} --body "$(cat .github/PULL_REQUEST_TEMPLATE/dev.md)"
#             # gh pr view ${{ github.event.pull_request.number }} --json body -q .body
#           elif [[ ${{ github.event.pull_request.base.ref }} == *"development"* ]]; then
#             echo "Using development template"
#             gh pr edit ${{ github.event.pull_request.number }} --body "$(cat .github/PULL_REQUEST_TEMPLATE/dev.md)"
#             gh pr view ${{ github.event.pull_request.number }} --json body -q .body
#           elif [[ ${{ github.event.pull_request.head.ref }} == *"stage"* ]]; then
#             echo "Using staging template"
#             gh pr edit ${{ github.event.pull_request.number }} --body "$(cat .github/PULL_REQUEST_TEMPLATE/stage.md)"
#             gh pr view ${{ github.event.pull_request.number }} --json body -q .body
#           elif [[ ${{ github.event.pull_request.head.ref }} == *"prod"* ]]; then
#             echo "Using production template"
#             gh pr edit ${{ github.event.pull_request.number }} --body "$(cat .github/PULL_REQUEST_TEMPLATE/prod.md)"
#           else
#             echo "No specific template applied"
#           fi
name: PR Template Selector
on:
  pull_request:
    types: [opened]
    # types:
    #   - closed
    # branches: [ 'development' , 'staging', 'ppd']

permissions:
  contents: write
  pull-requests: write

jobs:
  select-template:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set PR Template
        run: |
            BASE_BRANCH=${{ github.event.pull_request.base.ref }}
            PR_NUMBER=${{ github.event.pull_request.number }}
            REPO=${{ github.repository }}
            TOKEN=${{ secrets.GITHUB_TOKEN }}  # Securely use GitHub Token
            if [[ "$BASE_BRANCH" == "main" || "$BASE_BRANCH" == "staging_production" ]]; then
              echo "Skipping workflow for base branch: $BASE_BRANCH"
              exit 0
            fi
            if [[ "$BASE_BRANCH" == "development" ]]; then
              TEMPLATE_FILE=".github/PULL_REQUEST_TEMPLATE/dev.md"
              echo "Using development template"
            elif [[ "$BASE_BRANCH" == "staging" ]]; then
              TEMPLATE_FILE=".github/PULL_REQUEST_TEMPLATE/stage.md"
              echo "Using Stage template"
            elif [[ "$BASE_BRANCH" == "ppd" ]]; then
              TEMPLATE_FILE=".github/PULL_REQUEST_TEMPLATE/ppd.md"
              echo "Using preprod template"
            elif [[ "$BASE_BRANCH" == "prod" ]]; then
              TEMPLATE_FILE=".github/PULL_REQUEST_TEMPLATE/prod.md"
              echo "Using production template"
            else
              echo "Select the correct Base branch"
            fi

            if [[ -f "$TEMPLATE_FILE" ]]; then
              PR_TEMPLATE=$(jq -Rs . < "$TEMPLATE_FILE")  # JSON-encode content

              RESPONSE=$(curl -X PATCH -s -w "%{http_code}" -o output.json \
                -H "Authorization: token $TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                -d "{\"body\": $PR_TEMPLATE}" \
                "https://api.github.com/repos/$REPO/pulls/$PR_NUMBER")

              # echo "GitHub API Response Code: $RESPONSE"
              # echo "GitHub API Response Body:"
              # cat output.json
              echo "$TEMPLATE_FILE"
            else
              echo "Error: Template file $TEMPLATE_FILE not found."
              exit 1
            fi 